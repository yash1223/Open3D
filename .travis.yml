language: ruby
env:
  global:
    - SHARED=OFF
    - BUILD_DEPENDENCY_FROM_SOURCE=OFF

notifications:
  email:
    on_success: never
    on_failure: always

matrix:

  include:
    # Default environment of Ubuntu 14.04
    - os: linux
      dist: trusty
      sudo: true
      language: python
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - gcc-4.8
            - g++-4.8
            - cmake-data # to use cmake 3.0 or more recent
            - cmake
            - clang-format-6.0
      env: CHECK_STYLE=ON

    - os: linux
      dist: trusty
      sudo: required
      language: python
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.8
            - g++-4.8
            - cmake-data # to use cmake 3.0 or more recent
            - cmake
      env: SHARED=ON

    - os: linux
      dist: trusty
      sudo: required
      language: python
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.8
            - g++-4.8
            - cmake-data # to use cmake 3.0 or more recent
            - cmake
      env: BUILD_DEPENDENCY_FROM_SOURCE=ON

    # Similar environment of Ubuntu 16.04 (gcc 5.4)
    # travis ci only supports Ubuntu 14.04 (trusty) gcc-5 and 6
    # another option is to use docker.
    - os: linux
      dist: trusty
      sudo: required
      language: python
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - cmake-data # to use cmake 3.0 or more recent
            - cmake

    # Default environment of MacOS El Capitan
    # compiled using clang shipped with xcode8
    - os: osx
      osx_image: xcode8

    - os: osx
      osx_image: xcode8
      env: SHARED=ON

    # Default environment of MacOS Sierra
    # compiled using clang shipped with xcode8.3
    - os: osx
      osx_image: xcode8.3

    - os: osx
      osx_image: xcode8.3
      env: BUILD_DEPENDENCY_FROM_SOURCE=ON

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      ./util/scripts/install-deps-ubuntu.sh;
      ./util/scripts/make-documentation.sh;
      ./util/scripts/install-gtest.sh;
    fi
  # scripts/install-deps-osx.sh works well
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew install python;
      ./util/scripts/install-deps-osx.sh;
      ./util/scripts/install-gtest.sh;
    fi

  # for reference, display cmake and python version
  - python -V
  - cmake --version
  # - pip install numpy

script:
  # Build and install to CMake's default install path
  - python -V
  - mkdir build
  - cd build
  - if [ "$BUILD_DEPENDENCY_FROM_SOURCE" == "OFF" ]; then
      cmake -DBUILD_SHARED_LIBS=$SHARED -DBUILD_UNIT_TESTS=ON ..;
    else
      cmake -DBUILD_SHARED_LIBS=$SHARED -DBUILD_UNIT_TESTS=ON -DBUILD_EIGEN3=ON
            -DBUILD_GLEW=ON -DBUILD_GLFW=ON -DBUILD_JPEG=ON -DBUILD_JSONCPP=ON
            -DBUILD_PNG=ON ..;
    fi

  # Check style
  - if [ "$CHECK_STYLE" == "ON" ]; then
      make check-style;
    fi

  # make -j brings 'virtual memory exhausted: Cannot allocate memory' message
  # this is presumably due to limited memory space of travis-ci
  # also set the time limit to 30 mins, this is a fix to issue #557
  - travis_wait 30 sudo make install -j$(nproc)
  - ./bin/unitTests
  - test=`cmake --find-package -DNAME=Open3D -DCOMPILER_ID=GNU -DLANGUAGE=C -DMODE=EXIST`
  - if [ "$test" == "Open3D found." ]; then
      echo "PASSED find_package(Open3D) in default install path.";
    else
      echo "FAILED find_package(Open3D) in default install path.";
      exit 1;
    fi

  # Reconfig and install in a specified CMAKE_INSTALL_PREFIX
  - sudo make uninstall
  - if [ "$BUILD_DEPENDENCY_FROM_SOURCE" == "OFF" ]; then
      cmake -DBUILD_SHARED_LIBS=$SHARED -DBUILD_UNIT_TESTS=ON
            -DCMAKE_INSTALL_PREFIX=~/open3d_install ..;
    else
      cmake -DBUILD_SHARED_LIBS=$SHARED -DBUILD_UNIT_TESTS=ON -DBUILD_EIGEN3=ON
            -DBUILD_GLEW=ON -DBUILD_GLFW=ON -DBUILD_JPEG=ON -DBUILD_JSONCPP=ON
            -DBUILD_PNG=ON -DCMAKE_INSTALL_PREFIX=~/open3d_install ..;
    fi
  - travis_wait 30 sudo make install -j$(nproc)
  - test=`cmake --find-package -DNAME=Open3D -DCOMPILER_ID=GNU -DLANGUAGE=C -DMODE=EXIST
                -DCMAKE_PREFIX_PATH="~/open3d_install/lib/cmake"`
  - if [ "$test" == "Open3D found." ]; then
      echo "PASSED find_package(Open3D) in specified install path.";
    else
      echo "FAILED find_package(Open3D) in specified install path.";
      exit 1;
    fi

  # Test building example with installed Open3D
  - cd ../docs/_static/C++
  - mkdir build
  - cd build
  - cmake -DCMAKE_INSTALL_PREFIX=~/open3d_install ..
  - make
  - ./TestVisualizer

  # The following script has issues on SHARED = "ON"
  # - if [ "$SHARED" == "OFF" ]; then
  #     cd lib/Tutorial/Basic/ && python file_io.py
  #   fi
